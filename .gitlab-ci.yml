variables:
  PLATFORMS: "linux/arm64/v8,linux/amd64"
  DOCKER_BUILDKIT: "1"
  BASE_IMAGE: python

build:
  image: docker:latest@sha256:5415fccf3da3aed821efb2258cb7dcf52fb9bb0627b02d45338e887c352c4bce
  services:
    - docker:dind@sha256:5415fccf3da3aed821efb2258cb7dcf52fb9bb0627b02d45338e887c352c4bce

  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      variables:
        TAG_SUFFIX: "-mr${CI_MERGE_REQUEST_IID}"
    # No suffux for default branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"
      variables:
        TAG_SUFFIX: ""

  script:
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
    - docker pull "${BASE_IMAGE}:${PYTHON_VERSION}" || true

    # Install QEMU emulation support in the kernel
    # See: https://docs.docker.com/buildx/working-with-buildx/#build-multi-platform-images
    - docker run --privileged --rm tonistiigi/binfmt --install all

    # Create a buildx instance if one doesn't already exist
    - if [ "$(docker buildx ls | grep docker-container  | wc -l)" -le "0" ]; then
        docker context create buildx-build;
        docker buildx create --use buildx-build;
      fi

    - docker buildx build
        --platform "$PLATFORMS"
        --pull
        --build-arg BASE_IMAGE=$BASE_IMAGE
        --build-arg PYTHON_VERSION=$PYTHON_VERSION
        --build-arg NODE_VERSION=$NODE_VERSION
        --cache-from "${CI_REGISTRY_IMAGE}:${OUTPUT_TAG_NAME}${TAG_SUFFIX}"
        --tag "${CI_REGISTRY_IMAGE}:${OUTPUT_TAG_NAME}${TAG_SUFFIX}"
        --target $TARGET_STAGE
        --file Dockerfile .
        --push

  parallel:
    matrix:
      # Python
      - TARGET_STAGE: python
        PYTHON_VERSION: "3.11@sha256:799536bf14d9aeee6284fec4b367b3e397832801cd5f0819229b59356da681e9"
        OUTPUT_TAG_NAME: "3.11.${CI_PIPELINE_IID}"

      - TARGET_STAGE: python
        PYTHON_VERSION: "3.12@sha256:884deeef0862636aa023fa666ba38a2bad4d366bbec0e9c51592f75a16ae1de5"
        OUTPUT_TAG_NAME: "3.12.${CI_PIPELINE_IID}"

      - TARGET_STAGE: python
        PYTHON_VERSION: "3.13@sha256:30bd46f8647a438f95956c58a9e47ae8ef553680dfa54a02b1a9a7823a9e05a9"
        OUTPUT_TAG_NAME: "3.13.${CI_PIPELINE_IID}"

      # Python + Node 20
      - TARGET_STAGE: python-node
        PYTHON_VERSION: "3.11@sha256:799536bf14d9aeee6284fec4b367b3e397832801cd5f0819229b59356da681e9"
        NODE_VERSION: "20"
        OUTPUT_TAG_NAME: "3.11.${CI_PIPELINE_IID}-node20"

      - TARGET_STAGE: python-node
        PYTHON_VERSION: "3.12@sha256:884deeef0862636aa023fa666ba38a2bad4d366bbec0e9c51592f75a16ae1de5"
        NODE_VERSION: "20"
        OUTPUT_TAG_NAME: "3.12.${CI_PIPELINE_IID}-node20"

      - TARGET_STAGE: python-node
        PYTHON_VERSION: "3.13@sha256:30bd46f8647a438f95956c58a9e47ae8ef553680dfa54a02b1a9a7823a9e05a9"
        NODE_VERSION: "20"
        OUTPUT_TAG_NAME: "3.13.${CI_PIPELINE_IID}-node20"

      # Python + Node 22
      - TARGET_STAGE: python-node
        PYTHON_VERSION: "3.13@sha256:30bd46f8647a438f95956c58a9e47ae8ef553680dfa54a02b1a9a7823a9e05a9"
        NODE_VERSION: "22"
        OUTPUT_TAG_NAME: "3.13.${CI_PIPELINE_IID}-node22"
