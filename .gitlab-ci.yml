variables:
  PLATFORMS: "linux/arm64/v8,linux/amd64"
  DOCKER_BUILDKIT: "1"
  BASE_IMAGE: python

build:
  image: docker:latest
  services:
    - docker:dind

  script:
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
    - docker pull "${BASE_IMAGE}:${PYTHON_VERSION}" || true

    # Install QEMU emulation support in the kernel
    # See: https://docs.docker.com/buildx/working-with-buildx/#build-multi-platform-images
    - docker run --privileged --rm tonistiigi/binfmt --install all

    # Create a buildx instance if one doesn't already exist
    - if [ "$(docker buildx ls | grep docker-container  | wc -l)" -le "0" ]; then
        docker buildx create --use;
      fi

    - docker buildx build
        --platform "$PLATFORMS"
        --pull
        --build-arg BASE_IMAGE=$BASE_IMAGE
        --build-arg PYTHON_VERSION=$PYTHON_VERSION
        --build-arg NODE_VERSION=$NODE_VERSION
        --cache-from "${CI_REGISTRY_IMAGE}:${OUTPUT_TAG_NAME}"
        --tag "${CI_REGISTRY_IMAGE}:${OUTPUT_TAG_NAME}"
        --target $TARGET_STAGE
        --file Dockerfile .
        --push

  parallel:
    matrix:
      # Python
      - TARGET_STAGE: python
        PYTHON_VERSION: "3.9"
        NODE_VERSION: "18"
        OUTPUT_TAG_NAME: "py39"

      - TARGET_STAGE: python
        PYTHON_VERSION: "3.10.9"
        NODE_VERSION: "18"
        OUTPUT_TAG_NAME: "py310"

      - TARGET_STAGE: python
        PYTHON_VERSION: "3.11"
        NODE_VERSION: "18"
        OUTPUT_TAG_NAME: "py311"

      - TARGET_STAGE: python
        PYTHON_VERSION: "3.12"
        NODE_VERSION: "18"
        OUTPUT_TAG_NAME: "py312"

      # Python + Node 18
      - TARGET_STAGE: python-node
        PYTHON_VERSION: "3.9"
        NODE_VERSION: "18"
        OUTPUT_TAG_NAME: "py39-node18"

      - TARGET_STAGE: python-node
        PYTHON_VERSION: "3.10.9"
        NODE_VERSION: "18"
        OUTPUT_TAG_NAME: "py310-node18"

      - TARGET_STAGE: python-node
        PYTHON_VERSION: "3.11"
        NODE_VERSION: "18"
        OUTPUT_TAG_NAME: "py311-node18"

      - TARGET_STAGE: python-node
        PYTHON_VERSION: "3.12"
        NODE_VERSION: "18"
        OUTPUT_TAG_NAME: "py312-node18"

      # Python + Node 20
      - TARGET_STAGE: python-node
        PYTHON_VERSION: "3.9"
        NODE_VERSION: "20"
        OUTPUT_TAG_NAME: "py39-node20"

      - TARGET_STAGE: python-node
        PYTHON_VERSION: "3.10.9"
        NODE_VERSION: "20"
        OUTPUT_TAG_NAME: "py310-node20"

      - TARGET_STAGE: python-node
        PYTHON_VERSION: "3.11"
        NODE_VERSION: "20"
        OUTPUT_TAG_NAME: "py311-node20"

      - TARGET_STAGE: python-node
        PYTHON_VERSION: "3.12"
        NODE_VERSION: "20"
        OUTPUT_TAG_NAME: "py312-node20"
